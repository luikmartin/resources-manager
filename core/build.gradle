plugins {
    id 'java-library'
    id 'io.spring.dependency-management'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation(project(':common'),
            libs.springBootStarterDataJpa,
            libs.springBootStarterValidation,
            libs.springBootStarterKafka,

            libs.jacksonDatabind,
            libs.jacksonCore,
            libs.jacksonDatatypeJsr310,
            libs.jetbrainsAnnotations,
            "org.mapstruct:mapstruct:1.5.5.Final")

    annotationProcessor libs.lombok
    annotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final"

    testAnnotationProcessor libs.lombok
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final"

    testImplementation(libs.springBootStarterTest)
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
}

// Configure MapStruct to generate implementations in the same directory as interfaces
tasks.withType(JavaCompile) {
    options.compilerArgs = [
        '-Amapstruct.defaultComponentModel=spring',
        '-Amapstruct.verbose=true',
        '-Amapstruct.defaultInjectionStrategy=constructor'
    ]
}

tasks.named('test') {
    onlyIf {
        fileTree('src/test/java').matching { include '**/*Test.java' }.files.size() > 0
    }
} 
